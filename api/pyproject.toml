[tool.poetry]
name = "book-me-api"
version = "0.1.0"
description = ""
authors = ["Sebastian Derendarz <Derendarz99@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.9"
Django = "^4.0"
daphne = "^3.0"
djangorestframework = "^3.13.1"
shortuuid = "^1.0.8"
channels = "^3.0.4"
django-cors-headers = "^3.11.0"
psycopg2-binary = "^2.9.3"
Pillow = "^9.0.1"
django-prometheus = "^2.2.0"
django-admin-interface = "^0.18.6"
celery = "^5.2.3"
channels-redis = "^3.3.1"
redis = "^4.1.3"
djangorestframework-simplejwt = "^5.0.0"
sendgrid = "^6.9.6"
django-extensions = "^3.2.1"

[tool.poetry.dev-dependencies]
pytest = "^5.2"
isort = "^5.10.1"
black = "^22.1.0"
mypy = "0.931"
flake8 = "^4.0.1"
pylint = "^2.12.2"
django-stubs = "^1.9.0"
pyproject-flake8 = "0.0.1a2"
pylint-django = "^2.5.0"
ipdb = "^0.13.9"
djangorestframework-stubs = "^1.4.0"
graphviz = "^0.19.1"

[tool.black]
line_length = 100
skip_string_normalization = true
skip_numeric_underscore_normalization = true
target_version = ["py39"]
exclude = "migrations/"

[tool.flake8]
max-line-length = 100
max-complexity = 10
exclude = "migrations"
# E501 is handled by black
# W503 is incompatible with black
ignore = "E501,W503"

[tool.isort]
combine_as_imports = true
force_sort_within_sections = true
include_trailing_comma = true
line_length = 100
multi_line_output = 3
skip = "migrations"
use_parentheses = true

[tool.mypy]
disallow_untyped_defs = true
disallow_untyped_calls = true
warn_no_return = true
no_implicit_optional = true
ignore_missing_imports = true
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main"
]

[[tool.mypy.overrides]]
module = [
    "config.*",
    "authentication.migrations.*",
    "barber.migrations.*",
    "customer.migrations.*",
    "management.migrations.*"
]
ignore_errors = true

[tool.django-stubs]
django_settings_module = "core.config.settings"

[tool.pylint.master]
load-plugins = "pylint_django"
argument-rgx = "[a-z_][a-z0-9_]{2,45}$"
function-rgx = "[a-z_][a-z0-9_]{2,98}$"
method-rgx = "[a-z_][a-z0-9_]{2,45}$"
extension-pkg-whitelist = "lxml"
django-settings-module = "core.config.settings"
ignore = "scripts"

[tool.pylint.format]
max-line-length = 100

[tool.pylint.messages_control]
# 'line-too-long' is handled by black
# 'bad-continuation' is incompatible with black
disable = "bad-continuation,fixme,line-too-long,missing-docstring,no-member,no-self-use,raise-missing-from,redefined-outer-name,too-few-public-methods"

[tool.pylint.design]
max-parents = 16

[tool.pylint.typecheck]
generated-members = 'REQUEST,acl_users,aq_parent,"[a-zA-Z]+_set{1,2}",save,delete'

[tool.pylint.similarities]
ignore-imports = "yes"
ignore-comments = "yes"
ignore-docstrings = "yes"
min-similarity-lines = 7

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
